name: CI/CD

on:
  push:
  pull_request:
    branches:
      - main
      - dev

jobs:

  build-go:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
    
      - name: Checkout code 
        uses: actions/checkout@v2

      - name: Install Dependecies
        run: go get ./...

      - name: Go mod tidy
        run: go mod tidy

      - name: Build
        run: cd cmd/dripapp && go build
  
  build-docker:
    
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Go mod tidy
          run: go mod tidy

        - name: Login to DockerHub
          run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

        - name: Build
          run: docker build -t dependencies -f ./docker/builder.Dockerfile .  &&
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/drip_tarantool:${{github.sha}} -f ./docker/drip_tarantool.Dockerfile . &&
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/main_service:${{github.sha}} -f ./docker/main_service.Dockerfile . &&
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/chat_service:${{github.sha}} -f ./docker/chat_service.Dockerfile . &&
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/auth_service:${{github.sha}} -f ./docker/auth_service.Dockerfile .

        - name: Publish docker image
          run:
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/drip_tarantool:${{github.sha}} &&
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/main_service:${{github.sha}} &&
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/chat_service:${{github.sha}} &&
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/auth_service:${{github.sha}}

     

  test:
    needs: build-docker
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
    
      - name: Checkout code 
        uses: actions/checkout@v2

      - name: Install Dependecies
        run: go get ./...

      - name: Go mod tidy
        run: go mod tidy

      - name: Build
        run: cd cmd/dripapp && go build

      - name: Test
        run: make test

  linter:
    runs-on: ubuntu-latest

    steps:
    
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
    
      - name: Checkout code 
        uses: actions/checkout@v2

      - name: Install Dependecies
        run: go get ./...

      - name: Go mod tidy
        run: go mod tidy

      - name: Build
        run: cd cmd/dripapp && go build

      - name: Install GolangCI-Lint
        run: go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.1

      - name: Run GolangCI-Lint
        run: go run github.com/golangci/golangci-lint/cmd/golangci-lint run ./... --disable unused --disable deadcode
  
  test-coverage:
    needs: build-go
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
    
      - name: Checkout code 
        uses: actions/checkout@v2

      - name: Install Dependecies
        run: go get ./...

      - name: Go mod tidy
        run: go mod tidy

      - name: Build
        run: cd cmd/dripapp && go build

      - name: Test
        run: make test

      - name: Go cov dependencies
        run: go get github.com/AlekSi/gocov-xml

      - name: Run tests w/ coverage
        run: make test-coverage
        
  alert: 
    runs-on: ubuntu-latest
    steps:
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.mail.ru
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: obiwan@example.com,yoda@example.com
          # Required sender full name (address can be skipped):
          from: MonKeys Actions # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully!

  deploy:
    needs: [test, build-docker]

    runs-on: ubuntu-latest
    if:
      contains('
        refs/heads/dev
      ', github.ref)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup deployment ssh key
        run: set -eu &&
              mkdir "$HOME/.ssh" &&
              echo "${{ secrets.DEPLOYMENT_KEY }}" > "$HOME/.ssh/key" &&
              chmod 600 "$HOME/.ssh/key"
      
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: drip.monkeys.team
          username: clown
          key: ${{ secrets.DEPLOYMENT_KEY }}
          script: cd ~/../back &&
            git pull origin dev &&
            echo "${{ secrets.SSL_KEY }}" > star.monkeys.team.key &&
            echo "${{ secrets.SSL_CRT }}" > star.monkeys.team.crt &&
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/drip_tarantool:${{github.sha}} &&
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/main_service:${{github.sha}} &&
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/chat_service:${{github.sha}} &&
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/auth_service:${{github.sha}} &&
            sudo su &&
            sudo docker rm -vf $(sudo docker ps -a -q) || true &&
            sudo docker system prune -f -a --volumes &&
            sudo make redeploy 