version: "3"

volumes:
  dbbackups:
  postgis-data:
  tarantool:

services:
  main_service:
    image: main_service
    ports:
      - "8000:8000"
    # env_file:
    #   - envs/golang.env
    volumes:
      - $PWD/media:/app/media
    depends_on:
      - tarantool
      - postgres

#   staff:
#     image: staff_service
#     env_file:
#       - envs/golang.env
#     ports:
#       - "8084:8084"
#       - "8083:8083"
#     volumes:
#       - $PWD/media:/app/media
#     depends_on:
#       - redis
#       - postgres

#   survey:
#     image: survey_service
#     env_file:
#       - envs/golang.env
#     ports:
#       - "8085:8085"
#       - "8086:8086"
#     volumes:
#       - $PWD/media:/app/media
#     depends_on:
#       - redis
#       - postgres

  tarantool:
    image: "drip_tarantool"
    ports:
      - "3301:3301"
    volumes:
      - tarantool:/var/lib/tarantool
    #   - $PWD/docker/tarantool_scripts/dripapp.lua:/opt/tarantool/dripapp.lua

  postgres:
    image: postgres:latest
    volumes:
      - postgis-data:/var/lib/postgresql
      - $PWD/docker/postgres_scripts/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    # env_file:
    #   - envs/postgres.env
    environment:
        POSTGRES_DB: "postgres"
        POSTGRES_USER: "admin"
        POSTGRES_PASSWORD: "lolkek"
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"