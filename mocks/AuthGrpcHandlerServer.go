// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	context "context"
	auth "dripapp/internal/microservices/auth/delivery/grpc/protobuff"

	mock "github.com/stretchr/testify/mock"
)

// AuthGrpcHandlerServer is an autogenerated mock type for the AuthGrpcHandlerServer type
type AuthGrpcHandlerServer struct {
	mock.Mock
}

// GetById provides a mock function with given fields: _a0, _a1
func (_m *AuthGrpcHandlerServer) GetById(_a0 context.Context, _a1 *auth.Session) (*auth.User, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *auth.User
	if rf, ok := ret.Get(0).(func(context.Context, *auth.Session) *auth.User); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *auth.Session) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFromSession provides a mock function with given fields: _a0, _a1
func (_m *AuthGrpcHandlerServer) GetFromSession(_a0 context.Context, _a1 *auth.Cookie) (*auth.Session, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *auth.Session
	if rf, ok := ret.Get(0).(func(context.Context, *auth.Cookie) *auth.Session); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.Session)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *auth.Cookie) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
