// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	models "dripapp/internal/microservices/auth/models"

	mock "github.com/stretchr/testify/mock"
)

// SessionRepository is an autogenerated mock type for the SessionRepository type
type SessionRepository struct {
	mock.Mock
}

// DeleteSessionCookie provides a mock function with given fields: sessionCookie
func (_m *SessionRepository) DeleteSessionCookie(sessionCookie string) error {
	ret := _m.Called(sessionCookie)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(sessionCookie)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSessionByCookie provides a mock function with given fields: sessionCookie
func (_m *SessionRepository) GetSessionByCookie(sessionCookie string) (models.Session, error) {
	ret := _m.Called(sessionCookie)

	var r0 models.Session
	if rf, ok := ret.Get(0).(func(string) models.Session); ok {
		r0 = rf(sessionCookie)
	} else {
		r0 = ret.Get(0).(models.Session)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sessionCookie)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewSessionCookie provides a mock function with given fields: sessionCookie, userId
func (_m *SessionRepository) NewSessionCookie(sessionCookie string, userId uint64) error {
	ret := _m.Called(sessionCookie, userId)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, uint64) error); ok {
		r0 = rf(sessionCookie, userId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
